* Among Nurse

** Understanding the table

- iter(fix)/C shows the total # of iteration per choice point.
- #CS is the number of times createState is called.
- #L number of layers
- nbNode total number of nodes in MDD
- CS/N  number of calls to createState normalized by  number of MDD
  nodes.
- Choice-Rate: reduction rate in choice point w.r.t.   previous width.
- CS-Rate: reduction rate calls to createState  w.r.t. previous width
- CS/N-Rate: reduction rate in createState/Node w.r.t. previous width.

** Data
This is the best model (seqMDD3). Bi-directional.
- State takes 224 bytes
- Properties are still bytes
- States uses 172 properties

|   w | m | choice |   fail | #iter(fix)/C |      #CS | #L | time | nbNode |    #CS/#N | Choice-Rate |    CS-Rate | CS/N-Rate |
|-----+---+--------+--------+--------------+----------+----+------+--------+-----------+-------------+------------+-----------|
|   1 | 3 | 375140 | 185287 |         1.55 | 12356839 | 40 | 18.1 |     40 | 308920.98 |             |            |           |
|   2 | 3 | 163392 |  79413 |          1.9 | 16358330 | 40 | 24.1 |     80 | 204479.13 |   2.2959508 | 0.75538512 | 1.5107702 |
|   4 | 3 |  52568 |  24001 |          2.8 | 13207178 | 40 | 18.8 |    160 | 82544.863 |   3.1082027 |  1.2385939 | 2.4771878 |
|   8 | 3 |  22274 |   8854 |          3.1 | 10269173 | 40 | 14.7 |    320 | 32091.166 |   2.3600611 |  1.2860995 | 2.5721989 |
|  16 | 3 |   8806 |   2120 |         3.27 |  7005305 | 40 | 10.1 |    640 | 10945.789 |   2.5294118 |  1.4659138 | 2.9318276 |
|  32 | 3 |   6456 |    945 |          3.1 |  6166040 | 40 |  9.0 |   1280 | 4817.2188 |   1.3640025 |  1.1361109 | 2.2722217 |
|  64 | 3 |   5146 |    299 |         2.96 |  4999621 | 40 |  7.2 |   2560 | 1952.9770 |   1.2545667 |  1.2333015 | 2.4666029 |
| 128 | 3 |   4738 |     86 |         2.88 |  4700471 | 40 |  7.3 |   5120 | 918.06074 |   1.0861123 |  1.0636426 | 2.1272852 |
#+TBLFM: $9=$1*$7::$10=$6/$9
#+TBLFM: @3$11=@2$3/$3::@4$11=@3$3/$3::@5$11=@4$3/$3::@6$11=@5$3/$3::@7$11=@6$3/$3::@8$11=@7$3/$3::@9$11=@8$3/$3
#+TBLFM: @3$12=@2$6/$6::@4$12=@3$6/$6::@5$12=@4$6/$6::@6$12=@5$6/$6::@7$12=@6$6/$6::@8$12=@7$6/$6::@9$12=@8$6/$6
#+TBLFM: @3$13=@2$10/$10::@4$13=@3$10/$10::@5$13=@4$10/$10::@6$13=@5$10/$10::@7$13=@6$10/$10::@8$13=@7$10/$10::@9$13=@8$10/$10

This is a pure top-down model (no up information) 
- State takes 592 bytes
- Properties are all integers (fast)
- State uses 146 properties

|   w | m | choice |   fail | #iter(fix)/C |     #CS | #L | time | nbNode |    #CS/#N | Choice-Rate |    CS-Rate | CS/N-Rate |
|-----+---+--------+--------+--------------+---------+----+------+--------+-----------+-------------+------------+-----------|
|   1 | 1 | 375140 | 185287 |      1.05137 | 4777581 | 40 |  5.0 |     40 | 119439.53 |             |            |           |
|   2 | 1 | 190120 |  92777 |      1.14861 | 7915365 | 40 |  6.7 |     80 | 98942.063 |   1.9731748 | 0.60358316 | 1.2071664 |
|   4 | 1 |  67080 |  31257 |       1.3823 | 7282379 | 40 |  6.1 |    160 | 45514.869 |   2.8342278 |  1.0869202 | 2.1738404 |
|   8 | 1 |  34506 |  14970 |      1.26905 | 5586608 | 40 |  4.9 |    320 |  17458.15 |   1.9440097 |  1.3035421 | 2.6070843 |
|  16 | 1 |  17046 |   6240 |      1.35193 | 4829054 | 40 |  4.2 |    640 | 7545.3969 |   2.0242872 |  1.1568742 | 2.3137484 |
|  32 | 1 |  10404 |   2919 |      1.40677 | 3555647 | 40 |  3.1 |   1280 | 2777.8492 |   1.6384083 |  1.3581365 | 2.7162730 |
|  64 | 1 |  13194 |   4314 |      1.32901 | 5962597 | 40 |  5.0 |   2560 | 2329.1395 |  0.78854025 | 0.59632523 | 1.1926504 |
| 128 | 1 |   7888 |   1661 |      1.44929 | 3436506 | 40 |  3.6 |   5120 | 671.19258 |   1.6726673 |  1.7350754 | 3.4701508 |
#+TBLFM: $9=$1*$7::$10=$6/$9
#+TBLFM: @3$11=@2$3/$3::@4$11=@3$3/$3::@5$11=@4$3/$3::@6$11=@5$3/$3::@7$11=@6$3/$3::@8$11=@7$3/$3::@9$11=@8$3/$3
#+TBLFM: @3$12=@2$6/$6::@4$12=@3$6/$6::@5$12=@4$6/$6::@6$12=@5$6/$6::@7$12=@6$6/$6::@8$12=@7$6/$6::@9$12=@8$6/$6
#+TBLFM: @3$13=@2$10/$10::@4$13=@3$10/$10::@5$13=@4$10/$10::@6$13=@5$10/$10::@7$13=@6$10/$10::@8$13=@7$10/$10::@9$13=@8$10/$10

** Analysis

A few observations on m3
- The number of choice points drops at a factor > 2 up to with 16,
  then it slows down
- The number of ~createState~ calls increases at first, despite the more
  than halving of the number of choice point. So that is a net loss
  (since ~createState~ is the most expensive operation at the moment)
- The number of ~createState~ per mdd node does drop at a rate > 2,
  except going from w=1 to w=2 where the drop is more modest (1.51)
- The CS-Rate starts below 1 (i.e.,  going w=1->2 has a net
  increase). That observation is even _worse_ with m=1 where the rate
  is 0.6.

Comparison to m1
- This hurts. The number of calls to ~createState~ is almost 3 times higher
  in m3 while at width=1, i.e.,  4.7M versus 12.3M. I can understand
  doubling, because of the up-pass. But the almost triple hurts. 
- The number of fixpoint iteration per choice explains the above. 1.05
  in m1 vs. 1.55 in m3. 

Lessons ?
- Sounds like bounding the number of fixpoint iterations is in order. 
- There are too many calls to create state at the onset with w=2. It's
  true for both m=1 and m=3. Recall that we start with an mdd of
  width=1 and use the post to do an initial round of splitting to
  bring it to the desired width. Maybe we should revisit that. This
  was motivated by the up-pass that was required to do any kind of
  initial filtering of arcs. 


